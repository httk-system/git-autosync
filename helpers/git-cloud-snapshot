#!/bin/bash

set -e

CONFDIR=$(git-cloud confdir)
source "${CONFDIR}/config"

if [ "$1" == "describe" ]; then
   echo "Create a snapshot of the current workdir and push it to the cloud."
   exit 0
elif [ "$1" == "help" ]; then
    echo
    echo "Usage: git cloud snapshot"
    echo
    echo "Create a snapshot of the current workdir and push it to the cloud."
    echo
    exit 0
fi

MAIN_GIT_DIR=$(git rev-parse --git-dir)
CLOUD_GIT_DIR="${MAIN_GIT_DIR}/worktrees/cloud"
BRANCH="${GIT_CLOUD_SNAPSHOT_BRANCH_PREFIX}-$(hostname)"
LOCAL_BRANCH=$(git rev-parse --abbrev-ref main-worktree/HEAD)

if [ ! -e "${MAIN_GIT_DIR}/worktrees/cloud" ]; then
    echo "== Setting up cloud worktree"
    mkdir -p "${MAIN_GIT_DIR}/x-cloud/worktree"

    git worktree add "${MAIN_GIT_DIR}/x-cloud/worktree/cloud" -b "${BRANCH}" --no-checkout
    # Consider instead creating an orphan branch instead. I'm unsure about the differences it will cause,
    # but it seems to increase time for first sync a lot.
    #
    # git worktree add "${MAIN_GIT_DIR}/x-cloud/worktree/cloud" --no-checkout
    # git -C "${MAIN_GIT_DIR}/x-cloud/worktree/cloud" switch --orphan "${BRANCH}"
    #
    git -C "${MAIN_GIT_DIR}/x-cloud/worktree/cloud" commit -m "git-cloud initial $(hostname) ${LOCAL_BRANCH} $(date -R)" --allow-empty --no-gpg-sign
fi

echo "== Staging modifications into cloud worktree"
git --git-dir "${CLOUD_GIT_DIR}" add -A
sleep 1
while [ -n "$(git --git-dir "${CLOUD_GIT_DIR}" diff --quiet --cached)" -o "$LOCAL_BRANCH" != "$(git rev-parse --abbrev-ref main-worktree/HEAD)" ]; do
    echo "Note: files or branch changing while working; updating."
    LOCAL_BRANCH=$(git rev-parse --abbrev-ref main-worktree/HEAD)
    git --git-dir "${CLOUD_GIT_DIR}" add -A
    sleep 1
done

# Lets NOT merge histories; instead handle this when applying changes back
#git --git-dir "${CLOUD_GIT_DIR}" merge main-worktree/HEAD --no-ff --no-gpg-sign -m "git-cloud merge $(hostname) ${LOCAL_BRANCH} $(date -R)" --allow-unrelated-histories

if [ -n "$(git --git-dir "${CLOUD_GIT_DIR}" diff --name-only --cached)" ]; then
    echo "== Commiting changes"
    git --git-dir "${CLOUD_GIT_DIR}" commit -m "git-cloud commit $(hostname) ${LOCAL_BRANCH} $(date -R)" --no-gpg-sign
else
    echo "== No changes to commit"
fi

if ! git show-branch "${GIT_CLOUD_REMOTE_NAME}/${BRANCH}" >& /dev/null; then

    echo "== Upstream branch does not exist, pushing with --set-upstream"
    git --git-dir "${CLOUD_GIT_DIR}" push --follow-tags --set-upstream "${GIT_CLOUD_REMOTE_NAME}" "${BRANCH}"

else

    if [ -n "$(git --git-dir "${CLOUD_GIT_DIR}" cherry | head -n 1)" ]; then
        echo "== Changes made, pushing to cloud"
        git --git-dir "${CLOUD_GIT_DIR}" push --follow-tags
    else
        echo "== No commits to push to cloud"
    fi

fi
