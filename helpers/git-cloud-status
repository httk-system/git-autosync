#!/bin/bash

set -e

CONFDIR=$(git-cloud confdir)
source "${CONFDIR}/config"

if [ "$1" == "describe" ]; then
   echo "Show the difference between the working tree and the latest cloud checkpoint(s)."
   exit 0
elif [ "$1" == "help" ]; then
    echo
    echo "Usage: git cloud status [--no-fetch] [--cs-ask|--cs-auto|--cs-off]"
    echo
    echo "Show the difference between the working tree and the latest cloud checkpoint."
    echo ""
    echo "Options:"
    echo "  --no-fetch: base output on what is already known about the"
    echo "              cloud remote without starting with a fetch operation."
    echo
    exit 0
fi

# Ascend until we find a .git-cloud
while [ "$(pwd)" != "/" ]; do
  if [ -f ".git-cloud" ]; then
      break
  fi
  cd ..
done
if [ ! -f ".git-cloud" ]; then
    echo "Git cloud pull must be run inside a git cloud repotree." >&2
    exit 1
fi

#BRANCH="${GIT_CLOUD_SNAPSHOT_BRANCH_PREFIX}-$(hostname)"
#LOCAL_BRANCH=$(git rev-parse --abbrev-ref main-worktree/HEAD)

#if [ "$ALL" == "false" ]; then
#    git --git-dir "${CLOUD_GIT_DIR}" diff --cached --stat .
#    exit 0
#fi

#echo "== Cloud checkpoint diffs (use git cloud apply <branch name>)"

if git rev-parse --show-toplevel >& /dev/null; then
    GIT_TOP_LEVEL=$(git rev-parse --show-toplevel)
    cd "$GIT_TOP_LEVEL"
fi

find . -name ".git" -prune | while read LINE; do
    REPOPATH=$(dirname "$LINE")
    echo
    echo "== REPO: $REPOPATH"

    (cd "$REPOPATH"

    MAIN_GIT_DIR=$(git rev-parse --git-dir)
    CLOUD_GIT_DIR="${MAIN_GIT_DIR}/worktrees/cloud"

    if [ "$FETCH" == "true" ]; then
        git --git-dir "${MAIN_GIT_DIR}" fetch "${GIT_CLOUD_REMOTE_NAME}"
    fi

    git --git-dir "${CLOUD_GIT_DIR}" add -A

    if ! git diff-index --quiet --cached HEAD --; then
        echo "***** REPO HAS STAGED UNCOMMITED FILES *****"
    fi
    if ! git diff-files --quiet; then
        echo "***** REPO HAS UNSTAGED MODIFIED FILES *****"
    fi
    if [ -n "$(git ls-files --exclude-standard --others)" ]; then
        echo "* Repo has modified untracked files"
    fi
    UNPUSHED=$(git rev-list @{u}..@ --count)
    if [ "$UNPUSHED" -gt "0" ]; then
        echo "***** REPO HAS COMMITS THAT HAS NOT BEEN PUSHED *****"
    fi

    for BRANCH in $(git --git-dir "$CLOUD_GIT_DIR" branch -r -l "${GIT_CLOUD_REMOTE_NAME}/${GIT_CLOUD_SNAPSHOT_BRANCH_PREFIX}-*"); do

        #BASE=$(basename "$BRANCH")
        #RELATIVE=$(git -C "$REPOPATH" rev-list --left-right --count "HEAD...${BRANCH}")
        #LAST_MSG=$(git -C "$REPOPATH" log "${BRANCH}" -1 --pretty=%B)
        #if [ "${LAST_MSG#git-cloud}" != "${LAST_MSG}" ]; then
        #    LAST_BRANCH="[$(cut -d\  -f4 <<<"$LAST_MSG")]"
        #    TIMESTAMP="at $(cut -d\  -f5- <<<"$LAST_MSG")"
        #else
        #    LAST_BRANCH="[??] (msg: $(head -n 1 <<<"$LAST_MSG"))"
        #    TIMESTAMP=""
        #fi
        #printf "= %s from %s %s\n" "$BASE" "$LAST_BRANCH" "$TIMESTAMP"
        if [ -n "$(git --git-dir "${CLOUD_GIT_DIR}" diff --name-status "${BRANCH}")" ]; then
            echo "* ${BRANCH} has a diff -- check: git --git-dir \"${CLOUD_GIT_DIR}\" diff ${BRANCH}"
        fi
        #git diff --name-status "${BRANCH}"
        #printf "\n"
    done

    )
done
