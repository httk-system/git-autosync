setup_cloud_connshare() {

if [ "$CONNSHARE" == "auto" -o "$CONNSHARE" == "ask" ]; then

  echo "== Setting up ssh connection sharing to remote (handle auth if asked)"

  function trap_exit {
      echo
      echo "== Cleaning up ssh connection sharing socket"
      if [ -e "${GIT_CLOUD_SSHDIR}/connshare.socket" ]; then
          ssh -O exit -S "${GIT_CLOUD_SSHDIR}/connshare.socket" "$RHOST" hostname
      fi
      rm -f "${GIT_CLOUD_SSHDIR}/connshare.socket"
  }
  trap trap_exit EXIT

  trap_ctrlc() {
    kill -HUP $$
  }
  trap trap_ctrlc INT

  if [ -e "${GIT_CLOUD_SSHDIR}/connshare.socket" ]; then
      ssh -O exit -S "${GIT_CLOUD_SSHDIR}/connshare.socket" "$RHOST" hostname
      rm -f "${GIT_CLOUD_SSHDIR}/connshare.socket"
  fi

  if [ "$CONNSHARE" == "auto" ]; then
      ssh -M -S "${GIT_CLOUD_SSHDIR}/connshare.socket" -o "ControlPersist=2h" "$RHOST" true
  else
      ssh -S "${GIT_CLOUD_SSHDIR}/connshare.socket" -o "ControlPersist=2h" -o "ControlMaster=autoask" "$RHOST" true
  fi

  if ! ssh -S "${GIT_CLOUD_SSHDIR}/connshare.socket" -O check hostname; then
      echo "Error: failed to open ssh connection with connection sharing to $RHOST"
      exit 1
  fi

  export GIT_SSH_COMMAND="ssh -S '${GIT_CLOUD_SSHDIR}/connshare.socket'"
  exec_ssh() {
      ssh -S "${GIT_CLOUD_SSHDIR}/connshare.socket" "$@"
  }
else
  exec_ssh() {
      ssh "$@"
  }
fi


}
