#!/bin/bash

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd -P)
export HELPER_PATH="${SCRIPT_DIR}/../helpers"
export PATH="${HELPER_PATH}:$PATH"

MODE="$1"
shift 1

if [ -z "$MODE" -o "$MODE" == "help" -o "$MODE" == "--help" -o "$MODE" == "-h" -o \( "$MODE" != "confdir" -a ! -e "${HELPER_PATH}"/"git-cloud-${MODE}" \) ]; then
    if [ -z "$1" ]; then
        # handle: git cloud help and git cloud <non-existing mode>
        echo
        echo "git-cloud - helpers to maintain a 'cloud' tree of git repos."
        echo
        echo "Usage: git-cloud [cloud args] mode [mode args]"
        echo
        echo "Modes:"
        echo
        HELPERS=$(ls "${HELPER_PATH}"/git-cloud-* | sort)
        for HELPER in $HELPERS; do
            if [ "${HELPER%*~}" != "${HELPER}" ]; then
                continue
            fi
            DESC=$("$HELPER" describe)
            HELPER_NAME=$(basename "$HELPER")
            echo "  ${HELPER_NAME#git-cloud-}:" "${DESC}"
            echo ""
        done
        echo
        echo "For more info, execute: git-cloud help <mode>"
        echo
        exit 0
    else
        # handle: git cloude help <mode>
        MODE=$2
        if [ -e "${HELPER_PATH}"/"git-cloud-${MODE}" ]; then
            shift 1
            "${HELPER_PATH}"/"git-cloud-${MODE}" help "$@"
            exit 0
        else
            echo "Unknown mode: ${MODE}"
            exit 1
        fi
    fi
fi

# handle: git cloud <mode> help
if [ "$1" == "help" -o "$1" == "--help" -o "$1" == "-h" ]; then
    shift 1
    "${HELPER_PATH}"/"git-cloud-${MODE}" help "$@"
    exit 0
fi

source internal-git-cloud-read-config

export GIT_CLOUD_ORIG_SSH_AUTH_SOCK="$SSH_AUTH_SOCK"

setup_git_ssh() {
  if [ -n "$GIT_SSH_COMMAND" ]; then
    echo -e "#!/bin/bash\nexec $GIT_SSH_COMMAND $1 \"\$@\"" > "${GIT_CLOUD_SSHDIR}/sshwrapper"
  elif [ -n "$GIT_SSH" ]; then
      echo -e "#!/bin/bash\nexec \"$GIT_SSH\" $1 \"\$@\"" > "${GIT_CLOUD_SSHDIR}/sshwrapper"
  else
      echo -e "#!/bin/bash\nexec ssh $1 \"\$@\"" > "${GIT_CLOUD_SSHDIR}/sshwrapper"
  fi
  chmod +x "${GIT_CLOUD_SSHDIR}/sshwrapper"
  export GIT_SSH="${GIT_CLOUD_SSHDIR}/sshwrapper"
  unset GIT_SSH_COMMAND
}

if [ "$GIT_CLOUD_CONNSHARE" == "auto" ]; then
    setup_git_ssh "-oControlMaster=auto  -oControlPersist=2h -S \"${GIT_CLOUD_SSHDIR}/%C.cs.socket\""
elif [ "$GIT_CLOUD_CONNSHARE" == "ask" ]; then
    setup_git_ssh "-oControlMaster=autoask  -oControlPersist=2h -S \"${GIT_CLOUD_SSHDIR}/%C.cs.socket\""
fi

if [ "$GIT_CLOUD_WRAP_SSHAGENT" != "yes" ]; then
    if [ "$GIT_CLOUD_READ_KEYS" == "yes" ]; then
        source internal-git-cloud-load-keys
    fi
    exec "${HELPER_PATH}"/"git-cloud-${MODE}" "$@"
else
    exec ssh-agent bash -c '
        if [ "'$GIT_CLOUD_READ_KEYS'" == "yes" ]; then
          source internal-git-cloud-load-keys
        fi
        if [ "'$GIT_CLOUD_CONNSHARE'" == "auto" -o "'$GIT_CLOUD_CONNSHARE'" == "ask" ]; then
          source internal-git-cloud-setup-connshare
        fi
        "${HELPER_PATH}"/"git-cloud-'${MODE}' '"$@"
fi

find "$GIT_CLOUD_SSHDIR" -name "*.cs.socket" | while read SOCKET; do
    REMOTE_NAME="$(basename "$SOCKET" .cs.socket)"
    echo "== Closing open remote: ${REMOTE_NAME}"
    ssh -O exit -S "${SOCKET}"
done
